한국항공대학교 15' 컴퓨터네트워크
7조 김경석, 조동원, 신동우, 김창섭





채팅 프로그램 명세(Ver. 1.0 오후 4:12 2015-04-11)





- TCP 프로토콜을 이용한다. 따라서, 데이터의 순서가 엇갈리거나 유실될 염려가 없다.

- 애플리케이션의 형태는 클라이언트-서버 구조를 사용한다. 채팅이 진행될 때에도 사용자 간의 독립적인 연결로 바꾸지는 않는다.

- 서버는 24시간 돌아가는 프로세스를 가지고 있다.

- 언제나 서버와 클라이언트의 연결은 클라이언트 측이 최초 시도한다.

- 클라이언트의 계정은 서버에 등록되어 있다고 가정한다.

- 채팅 상대가 비접속 상태일 경우, 해당 상대로 보내지는 메시지는 일정량 서버가 저장해 둘 수 있다.("전달되지 않은 메시지 저장소")

- 서버가 받는 메시지는 최초의 로그인 정보를 제외하고 두 가지로 나뉜다.
  1. - ("chat/hello? this is my message")   //문자열의 앞에 "chat/"이 붙을 시 해당 메시지는 상대에게 보내는 메시지를 나타낸다.
  2. - ("chatwith/Mr.Network")              //문자열의 앞에 "chatwith/"가 붙을 시 해당 메시지는 원하는 채팅상대에게 앞으로의 메시지전달을 연결시켜 달라는 요청이 된다.

- 서버는 유저의 정보를 한 묶음으로 관리하는데, 다음과 같다.
  [ID / Password / current IP address / state(0 or 1) / message store / chatwith IP address]   //user의 state는 현재 접속 중일 경우 1, 아닐 경우는 0으로 셋팅한다.





0) 서버는 임의의 클라이언트의 TCP연결을 기다린다.

1) 클라이언트가 서버에 TCP접속 요청을 한다.

2) 서버는 그에 응답하여, 역시 TCP연결을 시도한다.

3) 서버는 ID와 Password를 기다리며, 클라이언트는 ID와 Password를 16byte로 보낸다.
   - 전방 8byte는 ID이며
   - 나머지 8byte는 Password이다.
   - 각 ID와 Password의 끝은 '\0'(NULL 문자)로 끝나며, 단지 '\0' 하나만 보낼 수는 없다.

4) 서버는 해당 ID와 Password를 확인 후 클라이언트에게 성공 또는 실패 메시지를 보낸다.
   - 성공시 1을, 실패시 0을 리턴.
   - 해당 유저의 정보를 변경한다. state = 1;

5) 만약, 클라이언트에게 실패 메시지가 도착했다면, 클라이언트는 ID와 Password입력창에서 계속 머물게 되고, 서버는 위의 3번 단계로 돌아간다.
   - 이 때, 클라이언트가 연결을 포기하여 프로세스를 종료한다면 서버는 위의 0번 단계로 돌아간다.

6) 만약, 서버가 성공 메시지를 보낸다면, 그와 동시에 해당 ID에 연동되어 있는 "전달되지 않은 메시지 저장소"의 메시지들을 보내준다.
   - 본 저장소는 일정량의 메시지만 보관한다.

7) 서버는 클라이언트에게 "chatwith/"가 붙은 메시지를 기다리며, 그 이외의 메시지는 무시한다.

8) 클라이언트는 사람을 찾는 메시지인 "chatwith/???"를 보내며, 서버는 해당 유저가 접속했는지, 존재하지 않는 계정인지 확인 후 답장한다.
   - 해당 계정이 서버에 등록되어있지 않는 경우는 0을 보내며, 유저가 비접속 상태일 경우는 1, 유저가 현재 접속 중인 경우는 2를 리턴한다.
   - 클라이언트가 1을 받으면 서버는 "chat/this user is not in the chat program now, your message will be stored in the user's message store"와 같은 메시지를 클라이언트에게 보낸다.
   - 클라이언트가 2를 받으면 서버는 "chat/this user is in the chat program, have a good time!"와 같은 메시지를 보내며 ???의 계정에 앞으로의 메시지를 전달한다.
   - 클라이언트가 0을 받는 경우는 항상 8번 단계에서 머물거나, 클라이언트 스스로 접속을 포기해야 할 것이다.

9-a) 서버는 모두 접속 중인 양측에서 보내오는 메시지의 경우, "chat/"로 시작하는 메시지는 상대에게 전달하며, "chatwith/"메시지를 받으면 현재 대화상대를 포기하고 8번 단계로 돌아간다.
     - 클라이언트가 채팅 도중, 상대가 나갈 경우, 서버로부터 "chat/connection is destroyed"같은 메시지를 받고 8번으로 돌아가게 된다.

9-b) 채팅상대가 들어와 있지 않는 경우, "chat/"으로 시작하는 메시지를 받는 경우, 채팅 상대의 message store에 저장한다.
     - 채팅을 종료하거나 "chatwith/???"와 같은 메시지를 보낼 경우, 각각 프로세스 종료 또는 8번 단계로 돌아간다.
     - 만약, 현재, 상대의 message store에 메시지를 보내고 있는 경우에, 상대가 접속했을 시, 자동으로 8번 단계를 수행하게 된다. 즉, 클라이언트는 갑자기 "chat/this user is in the chat program, have a good time!" 메시지를 받게 되는 것이다.
     
10) 채팅 중인 클라이언트가 프로세스를 종료하면, 서버와의 연결은 끉기게 된다.